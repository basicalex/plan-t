

#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// WiFi and MQTT credentials
const char* ssid = "your_wifi_ssid";
const char* password = "your_wifi_password";
const char* mqtt_server = "your_mqtt_server";
const int mqtt_port = 1883; // Default MQTT port, change if needed
const char* mqtt_user = "your_mqtt_user";
const char* mqtt_password = "your_mqtt_password";

// MQTT topic definitions
const char* soilMoistureTopic = "plant_monitor/soil_moisture";
const char* luminosityTopic = "plant_monitor/luminosity";
const char* humidityTopic = "plant_monitor/humidity";
const char* temperatureTopic = "plant_monitor/temperature";
const char* co2Topic = "plant_monitor/co2";
const char* coTopic = "plant_monitor/co";

// Initialize WiFi and MQTT clients
WiFiClient espClient;
PubSubClient client(espClient);

void setup() {
  // ... (previous setup code) ...

  // Connect to WiFi and MQTT server

  connectToWiFi();
connectToMQTT();
}

void loop() {
// ... (previous loop code) ...

// Publish sensor values to MQTT server
publishSensorValues(soilMoisture, luminosity, humidity, temperature, co2, co);

// Reconnect to MQTT server if connection is lost
if (!client.connected()) {
connectToMQTT();
}

// Process incoming MQTT messages
client.loop();
}

void connectToWiFi() {
Serial.print("Connecting to WiFi...");
WiFi.begin(ssid, password);

while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print(".");
}

Serial.println("Connected to WiFi");
}

void connectToMQTT() {
client.setServer(mqtt_server, mqtt_port);

while (!client.connected()) {
Serial.print("Connecting to MQTT server...");
if (client.connect("ESP8266Client", mqtt_user, mqtt_password)) {
Serial.println("Connected to MQTT server");
} else {
Serial.print("Failed to connect, retrying in 5 seconds...");
delay(5000);
}
}
}

void publishSensorValues(float soilMoisture, float luminosity, float humidity, float temperature, float co2, float co) {
client.publish(soilMoistureTopic, String(soilMoisture).c_str(), true);
client.publish(luminosityTopic, String(luminosity).c_str(), true);
client.publish(humidityTopic, String(humidity).c_str(), true);
client.publish(temperatureTopic, String(temperature).c_str(), true);
client.publish(co2Topic, String(co2).c_str(), true);
client.publish(coTopic, String(co).c_str(), true);
}

// ... (previous functions) ...